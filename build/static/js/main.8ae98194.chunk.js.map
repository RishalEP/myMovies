{"version":3,"sources":["Auth.js","ProtectedRoute.js","components/Navbar/Navbar.js","components/PhoneInput/PhoneInput.js","containers/Home/Myaccount/Account.js","components/Moviecard/Moviecard.js","apiService.js","store/actions.js","containers/Home/Mymovies/Movies.js","components/Table/Table.js","containers/Home/Searchmovies/Search.js","routes.js","containers/Home/Home.js","config/clientConfig.js","assets/img/reactlogo.png","containers/Login/Login.js","App.js","registerServiceWorker.js","store/reducers.js","index.js"],"names":["cb","localStorage","setItem","clear","getItem","ProtectedRoute","Component","component","rest","render","props","auth","isAuthenticated","console","log","to","pathname","state","from","location","Header","mobileSidebarToggle","bind","sidebarExists","e","this","setState","preventDefault","document","documentElement","classList","toggle","node","createElement","id","onclick","parentElement","removeChild","body","appendChild","navComponents","routes","map","route","Nav","Link","as","layout","path","name","Navbar","collapseOnSelect","expand","bg","variant","Brand","user","Toggle","aria-controls","Collapse","className","Button","size","onClick","logout","Phone","inputExtraProps","required","autoFocus","label","defaultCountry","country","value","phone","onChange","handleOnChange","Account","handleOnChangePhone","handleChangeCountry","handleChangeState","region","toggleShow","show","handleSubmit","fields","swal","content","firstname","lastname","address","date","icon","title","text","Container","initialValues","validationSchema","Yup","shape","matches","onSubmit","errors","touched","status","Row","Col","htmlFor","type","PhoneInput","phoneNumber","Moviecard","Card","style","width","Img","src","movie","Poster","Body","Title","Text","Plot","ListGroup","ListGroupItem","Language","Director","Released","imdbRating","getCall","query","a","currenturl","url","axios","get","data","ADD_MOVIE","REMOVE_MOVIE","Movies","getMovieInfo","results","Response","getMovie","myWatchlist","Promise","all","getData","then","myMovies","prevProps","display","justifyContent","alignItems","length","imdbID","connect","dispatch","onAddMovie","actionTypes","movieId","onRemoveMovie","CustomTable","columns","minWidth","rows","movies","classes","makeStyles","root","container","maxHeight","useStyles","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","height","includes","onRemove","onAdd","code","TablePagination","page","currentPage","count","totalResults","rowsPerPage","rowsPerPageOptions","onChangePage","changePage","Search","searchMovies","year","totalPages","Math","ceil","searchResult","lastSearch","Error","handleChangePage","event","pageNumber","typeError","min","integer","positive","ncols","xs","lg","placeholder","appRoutes","key","Home","history","replace","email","JSON","parse","routeComponents","exact","validusers","username","password","Login","login","filter","userLogin","credentials","stringify","push","Image","logo","rounded","max","withRouter","App","basename","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","reducer","action","concat","store","createStore","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8ae98194.chunk.js","sourcesContent":["class Auth {\n  \n    login(cb) {\n      localStorage.setItem(\"loggedin\",true)\n      cb();\n    }\n  \n    logout(cb) {\n        localStorage.clear()\n        cb();\n    }\n  \n    isAuthenticated() {\n      return localStorage.getItem(\"loggedin\");\n    }\n  }\n  \n  export default new Auth();\n  ","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from './Auth'\n\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n            console.log(auth.isAuthenticated())\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","\nimport React, { Component } from \"react\";\nimport { Navbar,Nav, Button} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n  mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n  }\n  render() {\n   const navComponents = this.props.routes.map((route) =>  <Nav.Link as={Link} to={route.layout+route.path} >{route.name}</Nav.Link>);\n  //<Link to={route.layout+route.path}>{route.name}</Link>) \n  // <Nav.Link href={route.layout+route.path} >{route.name}</Nav.Link>);\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n             <Navbar.Brand >{this.props.user.name} </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {navComponents}\n                </Nav>\n                <Nav>\n                    {/* <Button size='lg' disabled={true}>{this.props.user.name}</Button> */}\n                    <Button size='lg' onClick={this.props.logout}>Log Out</Button>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PhoneInput from \"react-phone-input-textfield-filled\";\nimport \"react-phone-input-textfield-filled/dist/style.css\";\n\nclass Phone extends Component {\n\n  render() {\n    return (\n      <div>\n        <PhoneInput \n          inputExtraProps={{\n            name: \"phone\",\n            required: true,\n            autoFocus: true\n          }}\n          label=\"\"\n          defaultCountry=\"in\"\n          country={'in'}\n          value={this.props.phone}\n          onChange={this.props.handleOnChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Phone","import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n    Container , Button, Row ,Col\n} from \"react-bootstrap\";\nimport PhoneInput from '../../../components/PhoneInput/PhoneInput'\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport swal from '@sweetalert/with-react';\n\nclass Account extends Component {\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          phone:'',\n          country:'India',\n          region:'Kerala',\n          show:true\n        };\n      }\n      \n    handleOnChangePhone = value => {\n        this.setState({ phone: value })\n      };\n\n    handleChangeCountry = value => {\n        this.setState({country:value})\n    }\n\n    handleChangeState = value => {\n        this.setState({region:value})\n    }\n\n    toggleShow = () => {\n        return(!this.state.show)\n    }\n\n    handleSubmit = fields => {\n        \n        if(this.state.phone !== ''){\n            swal({\n                content: <div>\n                    <h3>Name : {fields.firstname +' '+ fields.lastname} </h3>\n                    <h3>Address: {fields.address} </h3>\n                    <h3>Date of Birth: {fields.date} </h3>\n                    <h3>Phone: {this.state.phone} </h3>\n                    <h3>Country: {this.state.country} </h3>\n                    <h3>State: {this.state.region} </h3>\n                </div>,\n                icon: \"success\",\n                title: \"Successfully Updated\",\n              });\n        }\n        else{\n            swal({\n                title: \"Phone Number Missing\",\n                text: \"Enter a Valid Phone Number\",\n                icon: \"error\"\n              });\n        }\n\n        \n    }\n\n    render () {\n        return (\n            <Container >\n            \n            <h1>\n                My Account\n            </h1>\n\n            <Formik\n                initialValues={{\n                        firstname: '',\n                        lastname:'',\n                        address:'',\n                        date:''\n                    }}\n                validationSchema={Yup.object().shape({\n                    firstname:Yup.string()\n                        .matches('^(?=.*[A-Za-z ])','Alphabets Only')\n                        .required('Firstname is mandatory'),\n                    lastname:Yup.string()\n                        .matches('^(?=.*[A-Za-z ])','Alphabets Only')\n                        .required('Lastname is mandatory'),\n                    address: Yup.string(),\n                    date:Yup.date()\n                         .required('Date of Birth is Mandatory')\n\n                })}\n                onSubmit={fields => {\n                    // this.login(fields)\n                    console.log(\"Fieldsss\",fields)\n                    this.handleSubmit(fields)\n                    \n                }}>{({ errors, status, touched }) => (\n                  <Form >\n                      <Row>\n                        <Col>\n                            <div className=\"form-group\">\n                            <label htmlFor=\"firstname\">FirstName</label>\n                            <Field name=\"firstname\" type=\"text\" className={'form-control' + (errors.firstname && touched.firstname ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"firstname\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        </Col>\n                        <Col>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"lastname\">LastName</label>\n                                <Field name=\"lastname\" type=\"text\" className={'form-control' + (errors.lastname && touched.lastname ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"lastname\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        </Col>\n                     </Row>\n\n                     <Row>\n                         <Col>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <Field name=\"phoneNumber\" type=\"text\" component={PhoneInput} handleOnChange = {this.handleOnChangePhone}\n                                    phone = {this.state.phone} className={'form-control' + (errors.phoneNumber && touched.phoneNumber ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                         </Col>\n                         <Col>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"date\">Date of Birth</label>\n                                <Field name=\"date\" type=\"date\" className={'form-control' + (errors.lastname && touched.lastname ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"date\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        </Col>\n                         \n                     </Row>\n\n                     <Row>\n                         <Col>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"country\">Country</label>\n                                <br />\n                                <CountryDropdown name=\"country\" value={this.state.country}\n\t\t\t\t                    onChange={this.handleChangeCountry} />\n                                <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                         </Col>\n                         <Col>\n                            <div className=\"form-group\">\n                            <label htmlFor=\"state\">State</label>  \n                            <br />\n        \n                            <RegionDropdown name=\"region\" country={this.state.country} value={this.state.region}\n\t                            onChange={this.handleChangeState} />\n                                <ErrorMessage name=\"region\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                         </Col>\n                     </Row>\n                     <Row>\n                        <Col>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"address\">Address</label>\n                                <Field name=\"address\" type=\"text\" className={'form-control' + (errors.address && touched.address ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"address\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                         </Col>\n                     </Row>\n\n                      <div className=\"form-group\">\n                        <Button type=\"submit\" >\n                          Submit\n                        </Button>\n                      </div>\n                  </Form>\n              )}\n            </Formik>\n        </Container>\n        );\n    }\n}\n\nexport default Account","import React, { Component } from 'react';\nimport {Card,ListGroup,ListGroupItem} from 'react-bootstrap';\n\nclass Moviecard extends Component {\n\n  render() {\n    return (\n        \n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src={this.props.movie.Poster} />\n        <Card.Body>\n        <Card.Title >{this.props.movie.Title}</Card.Title>\n          <Card.Text>\n            {this.props.movie.Plot}\n          </Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>{this.props.movie.Language}</ListGroupItem>\n            <ListGroupItem>{this.props.movie.Director}</ListGroupItem>\n            <ListGroupItem>{this.props.movie.Released}</ListGroupItem>\n            <ListGroupItem>{this.props.movie.imdbRating  + \" * \"}</ListGroupItem>\n\n        </ListGroup>\n      </Card>\n      \n    );\n  }\n}\n\nexport default Moviecard","import axios from 'axios';\nconst url = \"//www.omdbapi.com\"\n\nconst getCall = async(query) => {\n    const currenturl = url + \"/?\"+query+\"&apikey=c7256108\";\n    const data = await axios.get(currenturl);\n    return data\n}\n\nexport default getCall;","export const ADD_MOVIE = 'ADD_MOVIE';\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE';","import React, { Component } from 'react';\nimport Moviecard from '../../../components/Moviecard/Moviecard'\nimport { connect } from 'react-redux';\nimport getCall from '../../../apiService'\nimport * as actionTypes from '../../../store/actions';\nimport { Container } from '@material-ui/core';\n\n\nclass Movies extends Component {\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          myMovies:[]\n        };\n      }\n\n    getMovieInfo = async(id) => {\n        let query = 'i='+id\n        const results = await getCall(query)\n        if(results.status === 200){\n            if(results.data.Response === \"True\"){  \n                console.log(\"RESULT\",results.data)              \n                return results.data\n            }\n            else{\n                return null\n            }\n        }\n        else{\n            return null\n        }\n        \n    }\n\n    async componentDidMount(){\n        await this.getMovie(this.props.myWatchlist)\n    }\n\n    async omponentDidUpdate(prevProps) {\n        if (prevProps.text !== this.props.text) {\n          await this.getMovie(this.props.myWatchlist)  ;\n        }\n      }\n\n    getMovie = async(myWatchlist) => {\n        const getData = async () => {\n            return Promise.all(myWatchlist.map(id => this.getMovieInfo(id)))\n        }\n        getData().then(data => {\n                this.setState({myMovies:data})\n        })\n    }\n\n    \n    render () {\n\n      return (\n            <Container style={{ display:\"flex\",\"flex-direction\": \"row\", \"flex-wrap\": \"wrap\", justifyContent: \"center\",\n                alignItems: \"center\"}}>\n                {this.state.myMovies.length ? (this.state.myMovies.map(movie =>\n                            <Moviecard movie={movie} key={movie.imdbID}/>\n                        )) : <h3>No Movies In WatchList</h3>\n                        \n                    }\n            </Container>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddMovie: (id) => dispatch({type: actionTypes.ADD_MOVIE, movieId:id}),\n        onRemoveMovie: (id) => dispatch({type: actionTypes.REMOVE_MOVIE, movieId:id})\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        myWatchlist: state.myWatchlist\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from \"react-bootstrap\";\n\n\nconst CustomTable = (props) => {\n\n    const columns = [\n        {id: 'Poster', label: 'Poster', minWidth: 170},\n        {id: 'imdbID', label: 'ID', minWidth:170},\n        {id: 'Title', label: 'Title', minWidth: 100},\n        {id: 'Type',  label: 'Type',minWidth: 170},\n        {id: 'Year',  label: 'Year',minWidth: 170}   \n      ];\n      \n      const rows = props.movies;\n      const useStyles = makeStyles({\n        root: {\n          width: '100%',\n        },\n        container: {\n          maxHeight: \"auto\",\n        },\n      });\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  // align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              <TableCell\n                  key=\"action\"\n                  // align={column.align}\n                  style={{ minWidth: 170 }}\n                >\n                  Action\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id}>\n                        {column.id === 'Poster' ? <img width=\"80\" height=\"90\" src={value}  /> : value}\n                      </TableCell>\n                    );\n                  })}\n                  {props.myWatchlist.includes(row.imdbID) ? <Button onClick={() => props.onRemove(row.imdbID)}> - Watchlist </Button> : <Button onClick={() => props.onAdd(row.imdbID)}>+ Watchlist</Button>}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        component=\"div\"\n        page={props.currentPage}\n        count={props.totalResults}\n        rowsPerPage={props.movies.length}\n        rowsPerPageOptions={[]}\n        onChangePage={props.changePage}\n      />\n    </Paper>\n  );\n}\n\nexport default CustomTable\n","import React, { Component } from 'react';\nimport {\n    Container , Button, Row ,Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport getCall from '../../../apiService'\nimport swal from '@sweetalert/with-react';\nimport * as actionTypes from '../../../store/actions';\nimport Table from '../../../components/Table/Table'\n\n\n\nclass Search extends Component{\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          searchResult:[],\n          totalPages:1,\n          currentPage:0,\n          totalResults:0,\n          lastSearch:{}\n        };\n      }\n\n    searchMovies = async (fields) => {\n        let query = 's='+fields.movie+'&y='+fields.year+'&page='+(this.state.currentPage+1)\n        const results = await getCall(query);\n        if(results.status === 200){\n            if(results.data.Response === \"True\"){                \n                const totalPages = Math.ceil(results.data.totalResults/10)\n                this.setState({searchResult:results.data.Search,\n                               lastSearch:fields,totalPages:totalPages ,totalResults:results.data.totalResults})\n            }\n            else{\n                swal({\n                    title: results.data.Error,\n                    text: \"Error Fetching Result\",\n                    icon: \"error\"\n                  });\n                this.setState({searchResult:[],totalPages:1,totalResults:0,currentPage:0,lastSearch:{}})\n            }\n        }\n        else{\n            swal({\n                title: \"Try Again\",\n                text: \"Error Fetching Result\",\n                icon: \"error\"\n              });\n            this.setState({searchResult:[],totalPages:1,totalResults:0,currentPage:0,lastSearch:{}})\n        }\n    }\n\n    handleChangePage = (event,pageNumber) => {\n\n        if(this.state.currentPage < pageNumber <= this.state.totalPages) {\n\n            this.setState({\n                currentPage:pageNumber\n                }, () => {\n                this.searchMovies(this.state.lastSearch);\n            });\n\n        }\n        else{\n            console.log(\"Invalid Page Number\")\n        }\n    }\n    \n    \n\n    render(){\n        return (\n            <Container >\n            <Formik\n                initialValues={{\n                    movie: '',\n                    year: ''\n                    \n                    }}\n                validationSchema={Yup.object().shape({\n                    name: Yup.string(),\n                    year: Yup.number()\n                        .typeError('Must be a valid year')\n                        .min(4,'Must be a valid year')\n                        .min(4,'Must be a valid year')\n                        .integer()\n                        .positive()\n                })}\n                onSubmit={fields => {\n                    this.searchMovies(fields)\n                }}>{({ errors, status, touched }) => (\n              \n                  <Form ncols={[\"col-md-6\",\"col-md-6\"]} >\n\n                    <Row>\n                        <Col xs lg=\"5\">\n                            <div className=\"form-group\">\n                                <Field placeholder=\"Search a movie\" name=\"movie\" type=\"text\" className={'form-control' + (errors.movie && touched.movie ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"movie\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        </Col>\n                        <Col xs lg=\"5\">\n                            <div className=\"form-group\">\n                                <Field placeholder=\"Enter a valid Year\" name=\"year\" type=\"text\" className={'form-control' + (errors.year && touched.year ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"year\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        </Col>\n                        <Col xs lg=\"2\">\n                            <div className=\"form-group\">\n                                <Button type=\"submit\" >\n                                    Search\n                                </Button>\n                        </div>\n                        </Col>\n                    </Row>\n                  </Form>\n              )}\n            </Formik>\n            {this.state.totalResults ? <Table \n                                                movies={this.state.searchResult} \n                                                changePage={this.handleChangePage}\n                                                totalResults={this.state.totalResults}\n                                                currentPage={this.state.currentPage}\n                                                onAdd={this.props.onAddMovie} \n                                                onRemove={this.props.onRemoveMovie}\n                                                myWatchlist={this.props.myWatchlist}/> \n                                            : null\n                                        }\n\n        </Container>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddMovie: (id) => dispatch({type: actionTypes.ADD_MOVIE, movieId:id}),\n        onRemoveMovie: (id) => dispatch({type: actionTypes.REMOVE_MOVIE, movieId:id})\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        myWatchlist: state.myWatchlist\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import Account from './containers/Home/Myaccount/Account'\nimport Movies from './containers/Home/Mymovies/Movies'\nimport Search from './containers/Home/Searchmovies/Search'\n\nconst appRoutes = [\n  {\n    path: \"/mymovies\",\n    name: \"My Movies\",\n    icon: \"pe-7s-cloud-upload\",\n    component: Movies,\n    layout: \"/app\",\n    key:\"hujhdkhj\"\n  },\n  \n  {\n    path: \"/myaccount\",\n    name: \"My Account\",\n    component: Account,\n    layout: \"/app\",\n    key:\"uuidjh\"\n  },\n  \n  {\n    path: \"/search\",\n    name: \"Search Movies\",\n    component: Search,\n    layout: \"/app\",\n    key:\"uihigdh\"\n  }\n];\n\nexport default appRoutes;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Route, Switch} from 'react-router-dom';\n\nimport './Home.css';\nimport Navbar from '../../components/Navbar/Navbar';\nimport routes from '../../routes'\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          user:{name:'',email:''}\n        };\n      }\n    \n    componentDidMount(){\n        const user =  localStorage.getItem(\"user\")\n        if (user)\n            this.setState({user:JSON.parse(user)})\n    }\n\n    logout = () => {\n        localStorage.clear()\n        this.props.history.replace('/')\n    }\n\n    render () {\n        const routeComponents = routes.map((route) => <Route exact path={route.layout+route.path} component={route.component} name={route.name} key={route.key} />);\n        return (\n            <div>\n                \n                <Navbar \n                  user={this.state.user}\n                  routes={routes}\n                  logout={this.logout}\n                  />  \n                  <Switch>\n                    {routeComponents}\n                 </Switch> \n            </div>\n        );\n    }\n}\n\nexport default Home;","export const validusers = [{\n    username:\"test@gmail.com\",\n    password:\"test@Test\",\n    name:\"Test User\"\n},\n{\n    username:\"admin@gmail.com\",\n    password:\"admin@Test\",\n    name:\"Admin\"\n},\n{\n    username:\"rishal@gmail.com\",\n    password:\"rishal@Test\",\n    name:\"Rishal\"\n}\n]","export default __webpack_public_path__ + \"static/media/reactlogo.d68bcead.png\";","\nimport React, { Component } from \"react\";\nimport {\n    Container , Button ,Image\n} from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { validusers } from '../../config/clientConfig'\nimport logo from \"../../assets/img/reactlogo.png\";\nimport { withRouter } from 'react-router-dom';\nimport auth from '../../Auth'\n\nclass Login extends Component {\n    login = async (fields) => {\n       const userLogin = await validusers.filter(user => {\n                return(user.username === fields.email)\n      });\n      if(userLogin.length){\n        if(userLogin[0].password === fields.password){\n            const credentials = {\n              email:userLogin[0].username,\n              name:userLogin[0].name\n            }\n            localStorage.setItem('user', JSON.stringify(credentials));\n            localStorage.setItem('loggedin', true);\n            auth.login(() => {\n                this.props.history.push(\"/app\");\n              });\n        }\n        else{\n            console.log(auth.isAuthenticated())\n\n            swal(\"Login Failed\", \"Incorrect Password\", \"error\")\n        }\n      }\n      else{\n        swal(\"Login Failed\", \"User Not Found\", \"error\")\n      }\n    }\n\n  render() {\n      return (\n        <Container >\n            \n            <h1>\n                Login Page\n\n            </h1>\n\n            <Image src={logo} width=\"400\" height=\"400\" rounded />            \n            <Formik\n                initialValues={{\n                    email: '',\n                    password: ''\n                    \n                    }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email('Must be a valid mail')\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .min(6, 'Password must be at least 6 characters')\n                        .max(12, 'Password could not be more than 12 charecters')\n                        .matches('^(?=.*[a-z])','Must have one Lower Case Letter')\n                        .matches('^(?=.*[A-Z])','Must have one upper Case Letter')\n                        .matches('^(?=.*[@#$%^&+=])','Must have one Special Charecter')\n                        .required('Password is required')\n                })}\n                onSubmit={fields => {\n                    this.login(fields)\n                }}>{({ errors, status, touched }) => (\n                  <Form ncols={[\"col-md-6\",\"col-md-6\"]} >\n                      <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email</label>\n                          <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                          <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                      </div>\n                      <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <Field name=\"password\" type=\"text\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                          <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <Button type=\"submit\" >\n                          Login\n                        </Button>\n                      </div>\n                  </Form>\n              )}\n            </Formik>\n        </Container>\n\n        \n\n      )\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport {ProtectedRoute} from './ProtectedRoute'\nimport { BrowserRouter} from \"react-router-dom\";\n\nimport Home from './containers/Home/Home';\nimport Login from './containers/Login/Login';\n\n\nimport \"./styles.css\";\n\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename=\"/myMovies\">\n        <Switch>\n          <Route exact path='/' component={Login} /> \n          <ProtectedRoute path='/app' component={Home} />\n          <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n        </Switch>\n        </BrowserRouter>\n      </div>\n        \n   );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    myWatchlist: []\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_MOVIE:\n            \n            return {\n                ...state,\n                myWatchlist: state.myWatchlist.concat( action.movieId )\n            }\n        case actionTypes.REMOVE_MOVIE:\n            return {\n                ...state,\n                myWatchlist: state.myWatchlist.filter(movie => movie!== action.movieId)\n            }\n        default:\n            return state;\n        }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reducer from './store/reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}